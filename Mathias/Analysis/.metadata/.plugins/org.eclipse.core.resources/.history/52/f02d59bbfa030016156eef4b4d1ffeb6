import java.math.BigDecimal;
import java.math.RoundingMode;

public class PiTestBigDez {
	static BigDecimal eins = new BigDecimal(1);
	static BigDecimal zwei = new BigDecimal(1);

	public static void main(String[] args) {
		/*BigDecimal ak = new BigDecimal(0);
		BigDecimal bk = new BigDecimal(0);
		BigDecimal akminus = new BigDecimal(3);
		BigDecimal bkminus = new BigDecimal(2.0 * Math.sqrt(akminus.doubleValue()));

		double EPSILON = 1E-20;

		do {
			bk = bkminus.divide(eins);
			ak = akminus.divide(eins);
			bk.add(ak);
			bk.divide(zwei);
			ak = akminus.multiply(bk);

			akminus = Math.sqrt(akminus * bk);

			bkminus = bk.pow(1);

		} while (ak.scale() < Integer.parseInt(args[0]));*/
		zwei = sqrt(zwei);
		zwei.toString();
		

	}

	public static BigDecimal sqrt(BigDecimal a) {
		
		BigDecimal xn = new BigDecimal(0);
		BigDecimal xnp1 = new BigDecimal(0);
		xn = a.add(eins);
		xn = xn.divide(zwei);
		for (int i =0;i<100;i++){
		xnp1 = a.divide(xn, 10, RoundingMode.HALF_UP);
		xnp1 = xn.add(xnp1);
		xn = xnp1.divide(zwei, 10, RoundingMode.HALF_UP);			
		}	
		System.out.println("test");
		return xn;
			
	}
}
